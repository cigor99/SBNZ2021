package rules.filter;
import rs.ac.uns.ftn.sbnz.rentcarservice.model.*;
import rs.ac.uns.ftn.sbnz.rentcarservice.dto.KorisnickiUnosDto;

rule "Oznacena ekoloska voznja"
    salience 100
    agenda-group "filter"
    lock-on-active true
    when
        zahteviZaAuto: ZahteviZaAuto();
        korisnickiUnos: KorisnickiUnosDto(ekoloskaVoznja==true);
    then
        modify(zahteviZaAuto) {getTipGoriva().add(TipGoriva.HIBRID);}
        modify(zahteviZaAuto) {getTipGoriva().add(TipGoriva.ELEKTRICNI);}
        System.out.println("Ekoloska voznja");
end;

rule "Oznacena dodatna oprema"
    salience 100
    agenda-group "filter"
    lock-on-active true
    when
        zahteviZaAuto: ZahteviZaAuto();
        korisnickiUnos: KorisnickiUnosDto($dodatnaOprema: dodatnaOprema, sizeOfDodatnaOprema() > 0);
    then
        modify(zahteviZaAuto){getDodatneOpreme().addAll($dodatnaOprema);}
        System.out.println("dodatna oprema");
end;

rule "Oznacena oprema za udobnost"
    salience 100
    agenda-group "filter"
    lock-on-active true
    when
        zahteviZaAuto: ZahteviZaAuto();
        korisnickiUnos: KorisnickiUnosDto($dodaciZaUdobnost: dodaciZaUdobnost, sizeOfDodaciZaUdobnost() > 0);
    then
        modify(zahteviZaAuto){getDodaciZaUdobnost().addAll($dodaciZaUdobnost);}
        System.out.println($dodaciZaUdobnost);
end;

rule "Unos putnika"
    salience 100
    agenda-group "filter"
    lock-on-active true
    when
        zahteviZaAuto: ZahteviZaAuto();
        korisnickiUnos: KorisnickiUnosDto();
    then
        modify(zahteviZaAuto) {setMinBrojSedista(korisnickiUnos.getBrojPutnika())}
        System.out.println("Broj putnika");

end;


rule "Unos budzeta"
    salience 100
    agenda-group "filter"
    lock-on-active true
    when
        zahteviZaAuto: ZahteviZaAuto();
        korisnickiUnos: KorisnickiUnosDto($budzet: budzet);
    then
        modify(zahteviZaAuto) {setBudzet(Budzet.StringToBudzet($budzet));};
        System.out.println("Budzet");

end;


rule "Svrha Gradska voznja"
    salience 100
    agenda-group "filter"
    lock-on-active true
    when 
        zahteviZaAuto: ZahteviZaAuto();
        korisnickiUnos: KorisnickiUnosDto(svrha == "GRADSKA_VOZNJA")
    then
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.HECBEK);};
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.KUPE);};
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.KABRIOLET);};
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.MINIVAN);};
        System.out.println("Gradska voznja");

end;


rule "Svrha duza putovanja"
    salience 100
    agenda-group "filter"
    lock-on-active true
    when 
        zahteviZaAuto: ZahteviZaAuto();
        korisnickiUnos: KorisnickiUnosDto(svrha == "DUZA_PUTOVANJA")
    then
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.LIMUNZINA);};
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.HECBEK);};
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.MINIVAN);};
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.KARAVAN);};
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.SUV);};
        System.out.println("Duza putovanja");

end;

rule "Svrha zabava"
    salience 100
    agenda-group "filter"
    lock-on-active true
    when 
        zahteviZaAuto: ZahteviZaAuto();
        korisnickiUnos: KorisnickiUnosDto(svrha == "ZABAVA")
    then
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.LIMUNZINA);};
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.KUPE);};
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.KABRIOLET);};
        System.out.println("Zabava");

end;


rule "Svrha biznis"
    salience 100
    agenda-group "filter"
    lock-on-active true
    when 
        zahteviZaAuto: ZahteviZaAuto();
        korisnickiUnos: KorisnickiUnosDto(svrha == "BIZNIS")
    then
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.LIMUNZINA);};
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.KUPE);};
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.SUV);};
        System.out.println("Biznis");

end;


rule "Svrha offroad"
    salience 100
    agenda-group "filter"
    lock-on-active true
    when 
        zahteviZaAuto: ZahteviZaAuto();
        korisnickiUnos: KorisnickiUnosDto(svrha == "OFFROAD")
    then
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.SUV);};
        modify(zahteviZaAuto) {getMoguceKaroserije().add(Karoserija.PIKAP);};
        System.out.println("Offroad");
end;
